Классы и методы
Class Area – класс области
·	__init__(self, country, number, points, name, color) – инициализация, country – класс страны, к которой принадлежит область, number, points, name – название области, color – цвет области
·	set_characteristics() – создание рандомных характеристик области
·	next_turn()  – следующий ход для области, изменение характеристик (население, ресурсы)
·	build_building(building) – строительство здания, если его можно построить, building – класс здания
·	del_building(building) – удаление здания, building – класс здания
·	get_characteristics() – возвращает характеристики области
·	get_taxes() – получить налоги вручную
·	change_country(country) – смена страны области (завоевали), при этом хар-ки области * 0.95
·	set_neighbors(broad) – установить соседей области, board – Board.board (доска)
Class Country – класс страны
·	__init__(self, name, number, color, bot=True) – инициализация, name – название страны (строка), bot – страна управляется ботом или игроком (1 – бот, по умолчанию, 0 – игрок)
·	set_near_countries(board) – ближайшие страны, board - доска
·	add_area(area) – добавить область и после обновляет характеристики страны, area – класс области
·	del_area(area) – удаление области, area – область, объект Area
·	next_turn – следующий ход для каждой области и обновление характеристик страны
·	get_characteristics – возвращает характеристики страны
·	set_neighbors() – соседи страны
·	power_measuring() – измерение силы страны
·	make_pact(country) – предложить пакт стране country
·	make_union(country) – составить союз с страной country и обновление состояния войны с другими странами
·	start_war(country) – начало войны с country, обновление состояния войны у союзников
CountryAI – класс бота страны
·	__init__(country) – инициализация, country – страна, которой управляет бот
·	next_turn() – следующий ход: начало войны, предложения о пактах и союзах, вызов функции war если идет война
·	war() – ведение войны: передвижение войск, найм солдат
Building – родительский класс, для всех зданий
·	Get_class – возвращает название класса – строка
University(Building) – здание университет (+наука и правители)
·	__init__(self, area) – инициализация, area – область, где построен университет
·	Next_turn – следующий ход, прибавляется наука каждый ход и раз в несколько ходов появляется правитель
·	Level_up – повышение уровня здания
GoldMine(Building) – класс золотой шахты
·	__init__(self, area) – инициализация, area – область, где построено здание
·	Next_turn – следующий ход, если есть залежи золота, то добывает его и оно становится добытым золотом
·	Level_up – повышение уровня здания
IronMine(Building) – класс рудной шахты
·	__init__(self, area) – инициализация, area – область, где построено здание
·	Next_turn – следующий ход, если есть залежи руды, то добывает его и оно становится добытым железом
·	Level_up – повышение уровня здания
Sawmill(Building) – класс лесопилки
·	__init__(self, area) – инициализация, area – область, где построено здание
·	Next_turn – следующий ход, если есть лес, то добывает его и оно становится древесиной
·	Level_up – повышение уровня здания
MetalurgicalPlant(Building) -  класс металлургического завода
·	__init__(self, area) – инициализация, area – область, где построено здание
·	Next_turn – следующий ход, если есть добытое железо, то перерабатывает его и оно становится обработанным железом
·	Level_up – повышение уровня здания
ArmyAcademy(Building) – класс армейской академии (появляются генералы)
·	__init__(self, area) – инициализация, area – область, где построено здание
·	Next_turn – следующий ход, за науку раз в несколько ходов появляется генерал – класс генерала
·	Level_up – повышение уровня здания
Governor – класс правителя
·	__init__(area) – создание рандомных характеристик правителя (честность, преданность, ум), area – область, которой  руководит правитель
·	next_turn() – следующий ход, постройка зданий по определённому условию, сбор ресурсов, предательство с определенной вероятностью (лояльность) если идет война и эта область граничит с вражеским государством, которое сильнее этого в 1.5 раза
·	change_area(area) – смена территории, которой сейчас он правит на area
General – класс генерала (только он может руководить армией)
·	__init__(area) – инициализация, создание рандомных хар-к: коэффициент атаки, обороны и общая сила армии, а также область, где сейчас находится area
·	update_army(soldiers) – найм армии (стоимость увеличивается от уровня): в области, где сейчас генерал: -люди soldiers, животные, добытое железо и древесина, если soldiers < 0, то в area, где находится генерал, возвращаются soldiers людей
·	powering_army(force) – усиление армии – общий коэффициент силы армии
·	attack() – атака армии
·	defence() – защита армии
·	change_area(area) – перемещение армии (если у генерала нет солдат, то может свободно перемещаться по стране, иначе только в соседнюю область)


